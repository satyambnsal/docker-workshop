{"version":3,"sources":["webpack:///./src/templates/lessonTemplate.js"],"names":["Template","props","data","markdownRemark","allMarkdownRemark","frontmatter","html","index","edges","reduce","acc","el","i","node","path","prevLink","className","to","title","nextLink","length","date","dangerouslySetInnerHTML","__html"],"mappings":"oMAIe,SAASA,EAASC,GAAQ,IAAD,EACMA,EAAMC,KAA5CC,EADgC,EAChCA,eAAgBC,EADgB,EAChBA,kBAEdC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAEfC,EAAQH,EAAkBI,MAAMC,QACpC,SAACC,EAAKC,EAAIC,GAAV,OAAiBD,EAAGE,KAAKR,YAAYS,OAAST,EAAYS,KAAOF,EAAIF,KACpE,GAGGK,EACJR,EAAQ,EACN,kBAAC,IAAD,CACES,UAAU,OACVC,GAAIb,EAAkBI,MAAMD,EAAQ,GAAGM,KAAKR,YAAYS,MAEvD,KAAOV,EAAkBI,MAAMD,EAAQ,GAAGM,KAAKR,YAAYa,OAE5D,KACAC,EACJZ,EAAQH,EAAkBI,MAAMY,OAAS,EACvC,kBAAC,IAAD,CACEJ,UAAU,OACVC,GAAIb,EAAkBI,MAAMD,EAAQ,GAAGM,KAAKR,YAAYS,MAEvDV,EAAkBI,MAAMD,EAAQ,GAAGM,KAAKR,YAAYa,MAAQ,MAE7D,KACN,OACE,yBAAKF,UAAU,oBACb,yBAAKA,UAAU,UACb,4BAAKX,EAAYa,OACjB,4BAAKb,EAAYgB,MACjB,yBACEL,UAAU,iBACVM,wBAAyB,CAAEC,OAAQjB,KAErC,yBAAKU,UAAU,gBACZD,EACAI","file":"component---src-templates-lesson-template-js-3962c0b856c60c6306db.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport { graphql } from \"gatsby\";\n\nexport default function Template(props) {\n  let { markdownRemark, allMarkdownRemark } = props.data; // data.markdownRemark holds our post data\n\n  const { frontmatter, html } = markdownRemark;\n\n  const index = allMarkdownRemark.edges.reduce(\n    (acc, el, i) => (el.node.frontmatter.path === frontmatter.path ? i : acc),\n    -1\n  );\n\n  const prevLink =\n    index > 0 ? (\n      <Link\n        className=\"prev\"\n        to={allMarkdownRemark.edges[index - 1].node.frontmatter.path}\n      >\n        {\"← \" + allMarkdownRemark.edges[index - 1].node.frontmatter.title}\n      </Link>\n    ) : null;\n  const nextLink =\n    index < allMarkdownRemark.edges.length - 1 ? (\n      <Link\n        className=\"next\"\n        to={allMarkdownRemark.edges[index + 1].node.frontmatter.path}\n      >\n        {allMarkdownRemark.edges[index + 1].node.frontmatter.title + \" →\"}\n      </Link>\n    ) : null;\n  return (\n    <div className=\"lesson-container\">\n      <div className=\"lesson\">\n        <h1>{frontmatter.title}</h1>\n        <h2>{frontmatter.date}</h2>\n        <div\n          className=\"lesson-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n        <div className=\"lesson-links\">\n          {prevLink}\n          {nextLink}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query LessonByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        order\n        section\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___order] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            order\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}